// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Int20HProject.Migrations
{
    [DbContext(typeof(TeencyBarkerContext))]
    [Migration("20190223193350_create prod db")]
    partial class createproddb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Models.SearchedFoodResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Food_name");

                    b.Property<double>("Nf_calories");

                    b.Property<double>("Nf_cholesterol");

                    b.Property<double>("Nf_dietary_fiber");

                    b.Property<double>("Nf_p");

                    b.Property<double>("Nf_potassium");

                    b.Property<double>("Nf_protein");

                    b.Property<double>("Nf_saturated_fat");

                    b.Property<double>("Nf_sugars");

                    b.Property<double>("Nf_total_carbohydrate");

                    b.Property<double>("Nf_total_fat");

                    b.Property<int>("Serving_qty");

                    b.Property<double>("Serving_weight_grams");

                    b.Property<int?>("User_Searches");

                    b.HasKey("Id");

                    b.HasIndex("User_Searches");

                    b.ToTable("Searched_Food_Result");
                });

            modelBuilder.Entity("Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<int>("FullYears");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("User_Info");
                });

            modelBuilder.Entity("Models.UserSearches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("SearchDateTime");

                    b.Property<int?>("User_Info");

                    b.HasKey("Id");

                    b.HasIndex("User_Info");

                    b.ToTable("User_Searches");
                });

            modelBuilder.Entity("Models.SearchedFoodResult", b =>
                {
                    b.HasOne("Models.UserSearches", "UserSearches")
                        .WithMany("SearchedFoodResults")
                        .HasForeignKey("User_Searches");
                });

            modelBuilder.Entity("Models.UserSearches", b =>
                {
                    b.HasOne("Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("User_Info");
                });
#pragma warning restore 612, 618
        }
    }
}
